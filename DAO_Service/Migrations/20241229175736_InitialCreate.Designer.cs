// <auto-generated />
using System;
using DAO_Service.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAO_Service.Migrations
{
    [DbContext(typeof(EcommDbContext))]
    [Migration("20241229175736_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DAO_Service.Models.Achat", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateAchat")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("utilisateurId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.HasIndex("utilisateurId");

                    b.ToTable("Achats");
                });

            modelBuilder.Entity("DAO_Service.Models.Categorie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("imageUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nomCategorie")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DAO_Service.Models.Image", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Produitid")
                        .HasColumnType("int");

                    b.Property<bool>("imagePrincipale")
                        .HasColumnType("bit");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Produitid");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("DAO_Service.Models.LignePanier", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("achatid")
                        .HasColumnType("int");

                    b.Property<int>("id_achat")
                        .HasColumnType("int");

                    b.Property<int>("id_produit")
                        .HasColumnType("int");

                    b.Property<double>("prixdevente")
                        .HasColumnType("float");

                    b.Property<int?>("produitid")
                        .HasColumnType("int");

                    b.Property<int>("quantite_ligne")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("achatid");

                    b.HasIndex("produitid");

                    b.ToTable("LignesPanier");
                });

            modelBuilder.Entity("DAO_Service.Models.Produit", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("categorieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateAjout")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomProduit")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("prixProduit")
                        .HasColumnType("float");

                    b.Property<int>("qteStock")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categorieId");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");
                });

            modelBuilder.Entity("DAO_Service.Models.Achat", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "utilisateur")
                        .WithMany()
                        .HasForeignKey("utilisateurId");

                    b.Navigation("utilisateur");
                });

            modelBuilder.Entity("DAO_Service.Models.Image", b =>
                {
                    b.HasOne("DAO_Service.Models.Produit", null)
                        .WithMany("images")
                        .HasForeignKey("Produitid");
                });

            modelBuilder.Entity("DAO_Service.Models.LignePanier", b =>
                {
                    b.HasOne("DAO_Service.Models.Achat", "achat")
                        .WithMany("lignesPanier")
                        .HasForeignKey("achatid");

                    b.HasOne("DAO_Service.Models.Produit", "produit")
                        .WithMany("lignesPanier")
                        .HasForeignKey("produitid");

                    b.Navigation("achat");

                    b.Navigation("produit");
                });

            modelBuilder.Entity("DAO_Service.Models.Produit", b =>
                {
                    b.HasOne("DAO_Service.Models.Categorie", "categorie")
                        .WithMany("produits")
                        .HasForeignKey("categorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categorie");
                });

            modelBuilder.Entity("DAO_Service.Models.Achat", b =>
                {
                    b.Navigation("lignesPanier");
                });

            modelBuilder.Entity("DAO_Service.Models.Categorie", b =>
                {
                    b.Navigation("produits");
                });

            modelBuilder.Entity("DAO_Service.Models.Produit", b =>
                {
                    b.Navigation("images");

                    b.Navigation("lignesPanier");
                });
#pragma warning restore 612, 618
        }
    }
}
